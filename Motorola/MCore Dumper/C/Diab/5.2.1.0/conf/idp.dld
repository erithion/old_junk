/* -------------------------------------------------------------------------
 * File: conf/idp.dld
 *
 * This is a sample linker command file for a Motorola IDP board.
 *
 * For a description of the different statements in this file, please
 * refer to the D-LD User's Manual.
 * ---------------------------------------------------------------------- */

/* The following command defines one 2 MB RAM area starting at address 0.
*/

MEMORY
{
	ram:	org = 0x10000, len = 0x1f0000
}


/* The following section defines where to put the different	*/
/* input sections. .text contains all code + optionally strings */
/* and constant data, .data contains initialized data, and .bss */
/* contains uninitialized data.					*/

SECTIONS {
	GROUP : {
		.text (TEXT) : {
			*(.text) *(.rodata) *(.rdata) *(.init) *(.fini) 
		}
		.sdata2 (TEXT) : {}
	} > ram

	GROUP ALIGN(0x1000):{
		.data (DATA)   : {}
		.ctors ALIGN(4) : { ctordtor.o(.ctors) *(.ctors) }
		.dtors ALIGN(4) : { ctordtor.o(.dtors) *(.dtors) }
		.sdata (DATA)  : {}
		.sbss (BSS)    : {}
		.bss (BSS)     : {}
	} > ram
}

/* ___HEAP_START: Used by sbrk.c. Start of memory used by malloc() etc.	*/
/* ___HEAP_END	: Used by sbrk.c. End of heap memory			*/
/* ___SP_INIT	: Used by emb_crt0.s. Initial address of stack pointer	*/
/* ___SP_END	: Used by sbrk.c. Only used when stack probing		*/
/* ___DATA_ROM	: Used by init.c. Address of initialized data in ROM	*/
/* ___DATA_RAM	: Used by init.c. Address of initialized data in RAM	*/
/* ___DATA_END	: Used by init.c. End of allocated initialized data	*/
/* ___BSS_START	: Used by init.c. Start of uninitialized data		*/
/* ___BSS_END	: Used by init.c. End of data to be cleared		*/

__HEAP_START	= ADDR(.bss)+SIZEOF(.bss);
__SP_INIT	= ADDR(ram)+SIZEOF(ram);
__HEAP_END	= __SP_INIT-0x800;
__SP_END	= __HEAP_END;
__DATA_RAM	= ADDR(.data);
__DATA_ROM	= __DATA_RAM;
__DATA_END	= ADDR(.sdata)+SIZEOF(.sdata);
__BSS_START	= ADDR(.sbss);
__BSS_END	= ADDR(.bss)+SIZEOF(.bss);

/* Some targets use an extra underscore in front of identifiers		*/
___HEAP_START	= __HEAP_START;
___HEAP_END	= __HEAP_END;
___SP_INIT	= __SP_INIT;
___SP_END	= __SP_END;
___DATA_ROM	= __DATA_ROM;
___DATA_RAM	= __DATA_RAM;
___DATA_END	= __DATA_END;
___BSS_START	= __BSS_START;
___BSS_END	= __BSS_END;

